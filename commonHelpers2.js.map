{"version":3,"file":"commonHelpers2.js","sources":["../src/js/2-snackbar.js"],"sourcesContent":["// Описаний у документації\nimport iziToast from 'izitoast';\n// Додатковий імпорт стилів\nimport 'izitoast/dist/css/iziToast.min.css';\n\n//   promise\n// \t.then(value => {\n// \t\t// Promise fulfilled\n// \t})\n// \t.catch(error => {\n// \t  // Promise rejected\n// \t});\n\n// +++++++++++++++++++++++++++++++++++++++++++++\n\n// const form = document.querySelector('.form');\n\n// form.addEventListener('submit', function(e) {\n//     e.preventDefault();\n\n//     const delay = parseInt(this.elements['delay'].value);\n//     const state = this.elements['state'].value;\n\n//     const promise = new Promise((resolve, reject) => {\n//         setTimeout(() => {\n//             if (state === 'fulfilled') {\n//                 resolve(delay);\n//             } else {\n//                 reject(delay);\n//             }\n//         }, delay);\n//     });\n\n//     promise\n//         .then((delay) => {\n//             iziToast.success({\n//                 title: '✅ Fulfilled',\n//                 message: `Fulfilled promise in ${delay}ms`,\n//             });\n//         })\n//         .catch((delay) => {\n//             iziToast.error({\n//                 title: '❌ Rejected',\n//                 message:`Rejected promise in ${delay}ms`,\n\n//             });\n//         });\n// });\n\nconst form = document.querySelector('.form');\n\nform.addEventListener('submit', function (e) {\n  e.preventDefault();\n\n  const delay = parseInt(this.elements['delay'].value);\n  const state = this.elements['state'].value;\n\n  const promise = new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (state === 'fulfilled') {\n        resolve(delay);\n      } else {\n        reject(delay);\n      }\n    }, delay);\n  });\n\n  promise\n    .then(delay => {\n      iziToast.success({\n        title: '✅ Fulfilled',\n        message: `Fulfilled promise in ${delay}ms`,\n      });\n    })\n    .catch(delay => {\n      iziToast.error({\n        title: '❌ Rejected',\n        message: `Rejected promise in ${delay}ms`,\n      });\n    });\n});\n\n//const isSuccess = true;\n\n// Create promise\n// const promise = new Promise((resolve, reject) => {\n//   setTimeout(() => {\n//     if (isSuccess) {\n//       resolve(\"Success! Value passed to resolve function\");\n//     } else {\n//       reject(\"Error! Error passed to reject function\");\n//     }\n//   }, 2000);\n// });\n\n// Registering promise callbacks\n// promise\n//   .then(value => {\n//     iziToast.show({\n//         title: 'Fulfilled',\n//         message: `✅ Fulfilled promise in ${delay}ms`\n//     });\n// })\n//   .catch(error => {\n//     iziToast.show({\n//         title: 'Rejected',\n//         message: `❌ Rejected promise in ${delay}ms`\n//     })\n//   });\n// });\n"],"names":["form","e","delay","state","resolve","reject","iziToast"],"mappings":"oFAiDA,MAAMA,EAAO,SAAS,cAAc,OAAO,EAE3CA,EAAK,iBAAiB,SAAU,SAAUC,EAAG,CAC3CA,EAAE,eAAc,EAEhB,MAAMC,EAAQ,SAAS,KAAK,SAAS,MAAS,KAAK,EAC7CC,EAAQ,KAAK,SAAS,MAAS,MAErB,IAAI,QAAQ,CAACC,EAASC,IAAW,CAC/C,WAAW,IAAM,CACXF,IAAU,YACZC,EAAQF,CAAK,EAEbG,EAAOH,CAAK,CAEf,EAAEA,CAAK,CACZ,CAAG,EAGE,KAAKA,GAAS,CACbI,EAAS,QAAQ,CACf,MAAO,cACP,QAAS,wBAAwBJ,CAAK,IAC9C,CAAO,CACP,CAAK,EACA,MAAMA,GAAS,CACdI,EAAS,MAAM,CACb,MAAO,aACP,QAAS,uBAAuBJ,CAAK,IAC7C,CAAO,CACP,CAAK,CACL,CAAC"}